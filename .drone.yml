kind: pipeline
name: default

trigger:
  branch:
    - test_sonarqube
  event:
    - push
    - pull_request

steps:
# Restore the cache if it exists
- name: restore-cache
  image: homerovalle/drone-gcs-cache
  settings:
    pull: true
    bucket: bip-drone-dependency-cache
    json_key:
      from_secret: gcs_credentials
    restore: true

- name: authenticate
  image: robertstettner/drone-mvn-auth
  pull: true
  settings:
    servers:
      from_secret: maven_servers

- name: test
  image: maven:3-jdk-8
  commands:
    # Create a service account keyfile to be used by GCS tests
    - mkdir secret
    - printf "%s" "$GAC" > secret/gcs_sa_test.json
    - mvn verify -P ssb-bip,coverage -Djdk.tls.client.protocols="TLSv1.2" -Dmaven.repo.local=/drone/src/.m2/repository --batch-mode --global-settings settings.xml
  environment:
    DAPLA_SPARK_SERVICE_ACCOUNT_KEY_FILE: secret/gcs_sa_test.json
    DAPLA_SPARK_TEST_BUCKET: bip-drone-dependency-cache
    GAC:
      from_secret: gcs_credentials
  depends_on:
    - authenticate
    - restore-cache

#- name: codecov
#  image: alpine:3
#  commands:
#    - apk add --no-cache bash curl findutils git
#    - curl -s https://codecov.io/bash | bash
#  environment:
#    CODECOV_TOKEN:
#      from_secret: codecov_token
#  depends_on:
#    - test
#
#- name: codacy
#  image: maven:3-jdk-8
#  commands:
#    - curl -Ls -o codacy-coverage-reporter "https://github.com/codacy/codacy-coverage-reporter/releases/download/6.1.3/codacy-coverage-reporter-linux-6.1.3"
#    - chmod +x codacy-coverage-reporter
#    - ./codacy-coverage-reporter report -l Java -r target/site/jacoco/jacoco.xml
#  environment:
#    CODACY_PROJECT_TOKEN:
#      from_secret: codacy_token
#  depends_on:
#    - test

- name: sonarqube
  image: maven:3-jdk-8
  commands:
    #- echo ignored for now
     - mvn -Djdk.tls.client.protocols="TLSv1.2" -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_PROJECTKEY sonar:sonar -P ssb-bip,coverage -Dmaven.repo.local=/drone/src/.m2/repository -Dmaven.javadoc.skip=true --batch-mode --global-settings settings.xml
  environment:
    SONAR_HOST_URL: https://sonarqube.prod-bip-ci.ssb.no
    SONAR_PROJECTKEY:
      from_secret: sonar_token
  depends_on:
    - test
#    - codacy
#    - codecov

---
kind: secret
name: maven_servers
get:
  path: drone-maven-servers
  name: ssb-bip-maven-servers

---
kind: secret
name: slack_webhook_url
get:
  path: drone-slack-webhook-url
  name: slack-webhook-url
---
kind: secret
name: sonar_host
get:
  path: drone-sonarqube-configuration
  name: url
---
kind: secret
name: sonar_token
get:
  path: drone-sonarqube-configuration
  name: token
---
kind: secret
name: gcr_credentials
get:
  path: drone-gcr-credentials
  name: gcr-credentials
---
kind: secret
name: gcs_credentials
get:
  path: drone-gcs-credentials
  name: gcs-credentials
